{"version":3,"sources":["webpack://storages3/webpack/universalModuleDefinition","webpack://storages3/./lib/all.ts","webpack://storages3/./lib/s3.ts","webpack://storages3/external \"@dra2020/fsm\"","webpack://storages3/external \"@dra2020/logabstract\"","webpack://storages3/external \"@dra2020/storage\"","webpack://storages3/external \"aws-sdk\"","webpack://storages3/external \"fs\"","webpack://storages3/external \"zlib\"","webpack://storages3/webpack/bootstrap","webpack://storages3/webpack/startup"],"names":[],"mappings":"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","file":"storages3.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"storages3\"] = factory();\n\telse\n\t\troot[\"storages3\"] = factory();\n})(global, function() {\nreturn ","export * from './s3';\n","// Node libraries\nimport * as fs from 'fs';\nimport * as stream from 'stream';\nimport * as zlib from 'zlib';\n\n// Public libraries\nimport * as AWS from 'aws-sdk';\n\n// Shared libraries\nimport * as Context from '@dra2020/context';\nimport * as Storage from '@dra2020/storage';\nimport * as LogAbstract from '@dra2020/logabstract';\nimport * as FSM from '@dra2020/fsm';\n\nexport interface Environment\n{\n  context: Context.IContext;\n  log: LogAbstract.ILog;\n  fsmManager: FSM.FsmManager;\n  storageManager: Storage.StorageManager;\n}\n\nclass S3Request implements Storage.BlobRequest\n{\n  blob: Storage.StorageBlob;\n  req: any;\n  res: any;\n  data: any;\n  err: any;\n\n  constructor(blob: Storage.StorageBlob)\n  {\n    this.blob = blob;\n    this.req = null;\n    this.res = null;\n    this.data = null;\n    this.err = null;\n  }\n\n  continuationToken(): string\n  {\n    if (this.data && this.data.NextContinuationToken)\n      return this.data.NextContinuationToken;\n\n    return undefined;\n  }\n\n  result(): number\n  {\n    if (this.data == null && this.blob.asLoadStream() == null && this.err == null)\n      return Storage.EPending;\n    else if (this.err != null)\n    {\n      if (this.err.statusCode && this.err.statusCode == 404)\n        return Storage.ENotFound;\n      else\n        return Storage.EFail;\n    }\n    else\n      return Storage.ESuccess;\n  }\n\n  asString(): string\n  {\n    if (this.err || this.res == null || this.data == null || this.data.Body == null)\n      return undefined;\n    let body: Buffer;\n    if (this.data.ContentEncoding && this.data.ContentEncoding === 'gzip')\n      body = zlib.gunzipSync(this.data.Body);\n    else\n      body = this.data.Body;\n    return body.toString('utf-8');\n  }\n\n  // Really probably should be reverse semantics - you need to explicitly ask for the unprocessed buffer\n  asUncompressedBuffer(): Buffer\n  {\n    if (this.err || this.res == null || this.data == null || this.data.Body == null)\n      return undefined;\n    let body: Buffer;\n    if (this.data.ContentEncoding && this.data.ContentEncoding === 'gzip')\n      body = zlib.gunzipSync(this.data.Body);\n    else\n      body = this.data.Body;\n    return body;\n  }\n\n  asBuffer(): Buffer\n  {\n    if (this.err || this.res == null || this.data == null || this.data.Body == null)\n      return undefined;\n    return this.data.Body;\n  }\n\n  asArray(): string[]\n  {\n    let a: string[] = [];\n\n    if (this.data && Array.isArray(this.data.Contents))\n      for (let i: number = 0; i < this.data.Contents.length; i++)\n        a.push(this.data.Contents[i].Key ? this.data.Contents[i].Key : '');\n\n    return a;\n  }\n\n  _dataToProps(data: any): Storage.BlobProperties\n  {\n    let props: Storage.BlobProperties = {};\n    props.ContentLength = (data.Size !== undefined) ? data.Size : 0;\n    props.Key = data.Key;\n    props.ETag = data.ETag;\n    props.LastModified = data.LastModified;\n    props.ContentEncoding = data.ContentEncoding;\n    return props;\n  }\n\n  asProps(): Storage.BlobProperties[]\n  {\n    let a: Storage.BlobProperties[] = [];\n\n    if (this.data && Array.isArray(this.data.Contents))\n    {\n      for (let i: number = 0; i < this.data.Contents.length; i++)\n        a.push(this._dataToProps(this.data.Contents[i]));\n    }\n    else\n      a.push(this._dataToProps(this.data));\n\n    return a;\n  }\n\n  asError(): string\n  {\n      if (this.err)\n        return this.err.message ? this.err.message : JSON.stringify(this.err);\n      return undefined;\n  }\n}\n\nconst ChunkSize = 4000000;\n\nexport class FsmStreamLoader extends FSM.Fsm\n{\n  sm: StorageManager;\n  blob: Storage.StorageBlob;\n  param: any;\n  err: any;\n  contentLength: number;\n  contentPos: number;\n  readStream: Storage.MultiBufferPassThrough;\n  passThrough: Storage.MultiBufferPassThrough;\n\n  constructor(env: Environment, sm: StorageManager, blob: Storage.StorageBlob)\n  {\n    super(env);\n    this.sm = sm;\n    this.blob = blob;\n    this.contentPos = 0;\n    this.param = { Bucket: sm.blobBucket(blob), Key: blob.id };\n\n    // We use passthrough stream because we want to make the load stream available\n    // immediately but we don't actually know whether we are going to have to pipe\n    // through gunzip or not until we get the first ContentEncoding header back.\n    this.readStream = new Storage.MultiBufferPassThrough();\n    this.passThrough = new Storage.MultiBufferPassThrough();\n    this.blob.setLoadStream(this.passThrough);\n  }\n\n  get env(): Environment { return this._env as Environment; }\n\n  tick(): void\n  {\n    if (this.ready)\n    {\n      // Figure out next chunk\n      if (this.contentLength === undefined)\n        this.param.Range = `bytes=0-${ChunkSize-1}`;\n      else\n        this.param.Range = `bytes=${this.contentPos}-${Math.min(this.contentPos+ChunkSize-1, this.contentLength-1)}`;\n\n      switch (this.state)\n      {\n\n        case FSM.FSM_STARTING:\n          this.sm.s3.getObject(this.param, (err: any, data: any) => {\n              if (err == null)\n              {\n                // On first chunk, figure out if we need to pipe through gunzip\n                if (this.contentLength === undefined)\n                {\n                  if (data.ContentEncoding && data.ContentEncoding === 'gzip')\n                  {\n                    let unzip = zlib.createGunzip({});\n                    unzip.on('end', () => { this.passThrough._done(); this.setState(FSM.FSM_DONE); } );\n                    unzip.on('error', () => { this.passThrough._done(); this.setState(FSM.FSM_ERROR); } );\n                    this.readStream.pipe(unzip).pipe(this.passThrough);\n                  }\n                  else\n                  {\n                    this.readStream.on('end', () => { this.passThrough._done(); this.setState(FSM.FSM_DONE); } );\n                    this.readStream.on('error', () => { this.passThrough._done(); this.setState(FSM.FSM_ERROR); } );\n                    this.readStream.pipe(this.passThrough);\n                  }\n                }\n\n                // Handle this data\n                if (data.Body)\n                  this.readStream.write(data.Body);\n\n                // Update content range and content length for next time through, or noticing finish\n                if (data.ContentRange)\n                {\n                  let re = /bytes (\\d+)-(\\d+)\\/(\\d+)/\n                  let s: string = data.ContentRange;  // \"bytes start-end/total\"\n                  let matched = re.exec(s);\n                  if (matched && matched.length === 4)\n                  {\n                    this.contentPos = Number(matched[2]) + 1;\n                    this.contentLength = Number(matched[3]);\n                  }\n                }\n              }\n\n              // Error or done reading\n              if (err || this.contentPos === this.contentLength)\n              {\n                this.err = err;\n                this.readStream._done();\n                if (err)\n                {\n                  this.passThrough._done();\n                  this.setState(FSM.FSM_ERROR);\n                }\n              }\n              else\n                this.setState(FSM.FSM_STARTING);\n            });\n          break;\n      }\n    }\n  }\n}\n\nexport class FsmTransferUrl extends Storage.FsmTransferUrl\n{\n  storageManager: StorageManager;\n\n  constructor(env: Environment, bucket: string, params: Storage.TransferParams)\n  {\n    super(env, bucket, params);\n  }\n}\n\nexport class StorageManager extends Storage.StorageManager\n{\n  s3: any;\n  count: number;\n\n  constructor(env: Environment, bucketMap?: Storage.BucketMap)\n  {\n    super(env, bucketMap);\n\n    if (this.env.context.xstring('aws_access_key_id') === undefined\n        || this.env.context.xstring('aws_secret_access_key') === undefined)\n    {\n      this.env.log.error('S3: not configured: exiting');\n      this.env.log.dump();\n      process.exit(1);\n    }\n\n    AWS.config.update({region: 'us-west-2'});\n    this.s3 = new AWS.S3({apiVersion: '2006-03-01'});\n    this.count = 0;\n  }\n\n  get env(): Environment { return this._env as Environment; }\n\n  lookupBucket(s: string): string\n  {\n    while (this.bucketMap[s] !== undefined)\n      s = this.bucketMap[s];\n    return s;\n  }\n\n  blobBucket(blob: Storage.StorageBlob): string\n  {\n    return this.lookupBucket(blob.bucketName);\n  }\n\n  load(blob: Storage.StorageBlob): void\n  {\n    if (blob.id == '')\n    {\n      this.env.log.error('S3: blob load called with empty key');\n      return;\n    }\n    let id: string = `load+${blob.id}+${this.count++}`;\n\n    this.env.log.event('S3: load start', 1);\n    let trace = new LogAbstract.AsyncTimer(this.env.log, 'S3: load', 1);\n    let params = { Bucket: this.blobBucket(blob), Key: blob.id };\n    let rq = new S3Request(blob);\n    this.loadBlobIndex[id] = rq;\n    blob.setLoading();\n    if (blob.param('ContentDisposition') === 'stream')\n    {\n      let fsm = new FsmStreamLoader(this.env, this, blob);\n      rq.req = fsm;\n      new FSM.FsmOnDone(this.env, fsm, (f: FSM.Fsm) => {\n          this._finishLoad(blob, id, rq, fsm.err, undefined);\n          trace.log();\n        });\n    }\n    else\n    {\n      rq.req = this.s3.getObject(params, (err: any, data: any) => {\n          this._finishLoad(blob, id, rq, err, data);\n          trace.log();\n        });\n    }\n  }\n\n  _finishLoad(blob: Storage.StorageBlob, id: string, rq: S3Request, err: any, data: any)\n  {\n    rq.res = this;\n    if (err)\n      rq.err = err;\n    else\n      rq.data = data;\n\n    blob.setLoaded(rq.result());\n    blob.endLoad(rq);\n    this.emit('load', blob);\n\n    delete this.loadBlobIndex[id];\n\n    this.env.log.event('S3: load end', 1);\n  }\n\n  head(blob: Storage.StorageBlob): void\n  {\n    if (blob.id == '')\n    {\n      this.env.log.error('S3: blob head called with empty key');\n      return;\n    }\n    let id: string = `head+${blob.id}+${this.count++}`;\n\n    this.env.log.event('S3: head start', 1);\n    let trace = new LogAbstract.AsyncTimer(this.env.log, 'S3: head', 1);\n    let params = { Bucket: this.blobBucket(blob), Key: blob.id };\n    let rq = new S3Request(blob);\n    this.headBlobIndex[id] = rq;\n    blob.setLoading();\n    rq.req = this.s3.headObject(params, (err: any, data: any) => {\n        rq.res = this;\n        if (err)\n          rq.err = err;\n        else\n          rq.data = data;\n\n        blob.setLoaded(rq.result());\n        blob.endHead(rq);\n        this.emit('head', blob);\n\n        delete this.headBlobIndex[id];\n\n        this.env.log.event('S3: head end', 1);\n        trace.log();\n      });\n  }\n\n  save(blob: Storage.StorageBlob): void\n  {\n    if (blob.id == '')\n    {\n      this.env.log.error('S3: blob save called with empty key');\n      return;\n    }\n    let id: string = `save+${blob.id}+${this.count++}`;\n\n    this.env.log.event('S3: save start', 1);\n\n    let trace = new LogAbstract.AsyncTimer(this.env.log, 'S3: save', 1);\n    let params: any = { Bucket: this.blobBucket(blob), Key: blob.id };\n    if (blob.param('ContentEncoding'))\n      params['ContentEncoding'] = blob.param('ContentEncoding');\n    if (blob.param('ContentType'))\n      params['ContentType'] = blob.param('ContentType');\n    if (blob.param('CacheControl'))\n      params['CacheControl'] = blob.param('CacheControl');\n    let rq = new S3Request(blob);\n    this.saveBlobIndex[id] = rq;\n    blob.setSaving();\n\n    // Get contents, try in order: 1) stream, 2) local file, 3) buffer, 4) utf8 string\n    let blobStream = blob.asStream();\n    if (blobStream == null && blob.param('ContentEncoding') !== 'gzip') // For gzip, need a buffer to compute length for save\n    {\n      let path: string = blob.asFile();\n      if (path)\n      {\n        try\n        {\n          blobStream = fs.createReadStream(path);\n        }\n        catch (err)\n        {\n          rq.err = err;\n          process.nextTick(() => {\n              blob.setSaved(rq.result());\n              blob.endSave(rq);\n              this.emit('save', blob);\n              delete this.saveBlobIndex[id];\n              this.env.log.error('S3: failed to open blob path file');\n              trace.log();\n            });\n          return;\n        }\n      }\n    }\n\n    if (blobStream != null)\n      params.Body = blobStream;\n    else\n    {\n      let b = blob.asBuffer();\n      params.Body = b ? b : blob.asString();\n    }\n\n    rq.req = this.s3.putObject(params, (err: any, data: any) => {\n        if (err)\n          rq.err = err;\n        else\n          rq.data = data;\n        rq.res = this;\n\n        blob.setSaved(rq.result());\n        blob.endSave(rq);\n        this.emit('save', blob);\n\n        delete this.saveBlobIndex[id];\n\n        this.env.log.event('S3: save done', 1);\n        trace.log();\n\n        if (blobStream)\n          blobStream.destroy();\n      });\n  }\n\n  del(blob: Storage.StorageBlob): void\n  {\n    if (blob.id == '')\n    {\n      this.env.log.error('S3: blob delete called with empty key');\n      return;\n    }\n    let id: string = `delete+${blob.id}+${this.count++}`;\n\n    this.env.log.event(`S3: del start`, 1);\n\n    let trace = new LogAbstract.AsyncTimer(this.env.log, 'S3: del', 1);\n    let params = { Bucket: this.blobBucket(blob), Key: blob.id };\n    let rq = new S3Request(blob);\n    this.delBlobIndex[id] = rq;\n    blob.setDeleting();\n    rq.req = this.s3.deleteObject(params, (err: any, data: any) => {\n        if (err)\n          rq.err = err;\n        else\n          rq.data = data;\n        rq.res = this;\n\n        blob.endDelete(rq);\n        this.emit('del', blob);\n\n        delete this.delBlobIndex[id];\n\n        trace.log();\n        this.env.log.event(`S3: del done`, 1);\n      });\n  }\n\n  ls(blob: Storage.StorageBlob, continuationToken?: string): void\n  {\n    let b = this.blobBucket(blob);\n    if (b == '')\n    {\n      this.env.log.error('S3: blob ls called with empty bucket');\n      return;\n    }\n    let id: string = `ls+${b}+${this.count++}`;\n\n    this.env.log.event(`S3: ls start`, 1);\n\n    let trace = new LogAbstract.AsyncTimer(this.env.log, 'S3: ls', 1);\n    let params: any = { Bucket: b };\n    if (continuationToken)\n      params.ContinuationToken = continuationToken;\n    let rq = new S3Request(blob);\n    this.lsBlobIndex[id] = rq;\n    blob.setListing();\n    rq.req = this.s3.listObjectsV2(params, (err: any, data: any) => {\n        if (err)\n          rq.err = err;\n        else\n          rq.data = data;\n        rq.res = this;\n\n        blob.setListed();\n        blob.endList(rq);\n        this.emit('ls', blob);\n\n        delete this.lsBlobIndex[id];\n\n        trace.log();\n        this.env.log.event(`S3: ls done`, 1);\n      });\n  }\n\n  createTransferUrl(params: Storage.TransferParams): Storage.FsmTransferUrl\n  {\n    let fsm = new FsmTransferUrl(this.env, this.lookupBucket('transfers'), params);\n    if (fsm === null)\n    {\n      let params: any = { Bucket: fsm.bucket, Fields: { key: fsm.key } };\n      this.s3.createPresignedPost(params, (err: any, url: string) => {\n          if (err)\n          {\n            this.env.log.error(`S3: createPresignedPost failed: ${err}`);\n            fsm.setState(FSM.FSM_ERROR);\n          }\n          else\n          {\n            fsm.url = url;\n            fsm.setState(FSM.FSM_DONE);\n          }\n        });\n    }\n    else\n    {\n      let s3params: any = { Bucket: fsm.bucket, Key: fsm.key };\n      if (params.op === 'putObject') s3params.ContentType = fsm.params.contentType;\n      this.s3.getSignedUrl(params.op, s3params, (err: any, url: string) => {\n          if (err)\n          {\n            this.env.log.error(`S3: getSignedUrl failed: ${err}`);\n            fsm.setState(FSM.FSM_ERROR);\n          }\n          else\n          {\n            fsm.url = url;\n            fsm.setState(FSM.FSM_DONE);\n          }\n        });\n    }\n    return fsm;\n  }\n}\n","module.exports = require(\"@dra2020/fsm\");;","module.exports = require(\"@dra2020/logabstract\");;","module.exports = require(\"@dra2020/storage\");;","module.exports = require(\"aws-sdk\");;","module.exports = require(\"fs\");;","module.exports = require(\"zlib\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./lib/all.ts\");\n"],"sourceRoot":""}